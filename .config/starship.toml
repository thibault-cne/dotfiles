format = """
$directory\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$package\
$nodejs\
$vlang\
$swift\
$zig\
$php\
$python\
$deno\
$rust\
$bun\
$golang\
${custom.docker}\
$env_var\
$cmd_duration\
$time\
$jobs\
$line_break\
$status
"""

add_newline = false

command_timeout = 1000

[status]
format = " [$status]($style) $symbol "
disabled = false
success_symbol = "[➜](bold green)"
symbol = "[✗](bold red)"
style = "bold red"
success_style = "bold green"

[time]
disabled = false
time_format = '%X'
format = 'at [$time]($style)'
style = 'bold 243'

[directory]
truncate_to_repo = false
truncation_length = 17
truncation_symbol = '../'
read_only = ' '

[python]
python_binary = 'python'
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
symbol = '󰌠 '

[swift]
symbol = ' '

[package]
symbol = '󰏗 '
display_private = true

[git_branch]
symbol = ' '

[git_commit]
tag_symbol = ' '

[git_status]
conflicted = ''
deleted = '${count}'
staged = '[++\($count\)](green)'
ahead = '${count}'
diverged = '󰕚${ahead_count}${behind_count}'
behind = '${count}'

[golang]
symbol = ' '

[php]
symbol = ' '

[rust]
symbol = ' '

[sudo]
style = 'bold red'
symbol = '! '
disabled = false

[custom.docker]
description = 'Shows the docker symbol if the current directory has Dockerfile or docker-compose.yml files'
command = 'echo 🐳'
detect_files = ['Dockerfile', 'docker-compose.yml', 'docker-compose.yaml']
when = 'command -v docker &> /dev/null; exit (echo $?);'
format = 'on $output '
